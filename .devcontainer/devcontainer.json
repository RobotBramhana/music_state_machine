{
	"name": "ROS devcontainer for vscode",
	"build": {
		"dockerfile": "Dockerfile",
	},
	// The below statement is an alternate to building from Dockerfile
	// "image": "ros:melodic"

	// Set *default* container specific settings.json values on container create.
	"settings": {"terminal.integrated.shell.linux": "/bin/bash"},

	// Add the IDs of extensions you want installed when the container is created.,
	"extensions": [
		"bbenoist.Doxygen",
		"betwo.vscode-doxygen-runner",
		"cheshirekow.cmake-format",
		"donjayamanne.githistory",
		"dunstontc.vscode-docker-syntax",
		"eamodio.gitlens",
		"gocarlos.cmake-tools",
		"Gruntfuggly.todo-tree",
		"hakua.doxygen-previewer",
		"hars.CppSnippets",
		"henriiik.docker-linter",
		"mads-hartmann.bash-ide-vscode",
		"mhutchie.git-graph",
		"mikeburgh.xml-format",
		"ms-iot.vscode-ros",
		"ms-python.python",
		"ms-vscode-remote.remote-ssh",
		"ms-vscode-remote.remote-ssh-edit",
		"ms-vscode-remote.remote-wsl",
		"ms-vscode.cpptools",
		"ms-vscode.cpptools-extension-pack",
		"ms-vscode.cpptools-themes",
		"pijar.ros-snippets",
		"shakram02.bash-beautify",
		"Tacha-S.roslint",
		"vsciot-vscode.vscode-arduino",
		"vsls-contrib.gistfs",
		"wujipeng.cpp-comment-generator",
		"xaver.clang-format",
		"ms-vscode.cmake-tools"],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "",
	
	// The ones that did not work 
	// "remoteEnv": {
	// 	"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
	// },
	// "workspaceMount": "source=${localWorkspaceFolder}, target=/workspace/src, type=volume, consistency=delegated",
	
	// The one that worked.
	// Advantage : container launch won’t fail if the local path doesn’t already exist.
	"runArgs": [
    "-v", "${localWorkspaceFolder}:/workspace/src",
	"-e","DISPLAY",
	"-e","QT_X11_NO_MITSHM=1" ,
    "-v","/tmp/.X11-unix:/tmp/.X11-unix:rw" 
  ],
	"workspaceFolder": "/workspace"

}